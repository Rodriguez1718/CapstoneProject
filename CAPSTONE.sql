CREATE TABLE REGISTER(
REGISTER_ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
FIRSTNAME VARCHAR(100) NOT NULL,
LASTNAME VARCHAR(100) NOT NULL,
PHONE VARCHAR(15) NOT NULL,
[ADDRESS] VARCHAR(255) NOT NULL,
)

CREATE TABLE [USER](
[USER_ID] INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
REGISTER_ID INT NOT NULL,
ROLE VARCHAR(15) NOT NULL,
USERNAME VARCHAR(100) NOT NULL,
[PASSWORD] VARCHAR(100) NOT NULL,
FOREIGN KEY (REGISTER_ID) REFERENCES REGISTER(REGISTER_ID)
)


CREATE TABLE PET (
PET_ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
[USER_ID] INT NOT NULL,
PET_TYPE VARCHAR(20) NOT NULL,
PET_BREED VARCHAR(30) NOT NULL,
PHOTO_URL VARCHAR(100) NOT NULL,
PET_WEIGHT DECIMAL(5,2) NOT NULL,
PET_HEIGHT DECIMAL(5,2) NOT NULL,
QUANTITY INT NOT NULL,
SHELTER_ID INT NOT NULL,
FOREIGN KEY ([USER_ID]) REFERENCES [USER]([USER_ID]),
FOREIGN KEY (SHELTER_ID) REFERENCES PET_SHELTER(SHELTER_ID)
)


CREATE TABLE ADOPTION(
ADOPTION_ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
PET_ID INT NOT NULL,
[USER_ID] INT NOT NULL,
NO_ADOPTION INT NOT NULL,
PICKUP_DATE DATE NOT NULL,
ADOPTION_DATE DATE NOT NULL,
FOREIGN KEY (PET_ID) REFERENCES PET(PET_ID),
FOREIGN KEY ([USER_ID]) REFERENCES [USER]([USER_ID])
)

CREATE TABLE EVALUATION (
EVALUATION_ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
[USER_ID] INT NOT NULL,
ADOPTION_ID INT NOT NULL,
EVALUATION_STATUS VARCHAR(10),
ADOPTION_INCOME MONEY NOT NULL,
ADOPTION_HISTORY TEXT NOT NULL,
BEHAVIORAL_ASSESS TEXT NOT NULL,
EVALUATION_DATE DATETIME DEFAULT GETDATE() NOT NULL,
FOREIGN KEY([USER_ID]) REFERENCES [USER]([USER_ID]),
FOREIGN KEY(ADOPTION_ID) REFERENCES ADOPTION(ADOPTION_ID)
)

CREATE TABLE PET_SHELTER(
SHELTER_ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
[ADDRESS] VARCHAR(150) NOT NULL,
SHELTER_NAME VARCHAR(20) NOT NULL,
CONTACT_NUMBER VARCHAR(15) NOT NULL,
EMAIL VARCHAR(100) NOT NULL,
)

CREATE TABLE REVIEW(
REVIEW_ID INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
EVALUATION_ID INT NOT NULL,
[USER_ID] INT NOT NULL,
REVIEW TEXT NOT NULL,
FOREIGN KEY(EVALUATION_ID) REFERENCES EVALUATION(EVALUATION_ID),
FOREIGN KEY([USER_ID]) REFERENCES [USER]([USER_ID])


)


/*Stored Procedure and Triggers*/

USE [FUREVERFAMILY]
GO
/****** Object:  StoredProcedure [dbo].[RegisterUser]    Script Date: 5/2/2025 4:00:47 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[RegisterUser]
@FIRSTNAME VARCHAR(100),
@LASTNAME VARCHAR(100),
@PHONE VARCHAR(15),
@ADDRESS VARCHAR(255),
@ROLE VARCHAR(15),
@USERNAME VARCHAR(100),
@PASSWORD VARCHAR(100)
AS
BEGIN
-- Insert into REGISTER table
INSERT INTO REGISTER (FIRSTNAME, LASTNAME, PHONE, [ADDRESS])
VALUES (@FIRSTNAME, @LASTNAME, @PHONE, @ADDRESS);

-- Get the REGISTER_ID of the newly inserted record
DECLARE @REGISTER_ID INT;
SET @REGISTER_ID = SCOPE_IDENTITY();

-- Insert into USER table
INSERT INTO [USER] (REGISTER_ID, ROLE, USERNAME, [PASSWORD])
VALUES (@REGISTER_ID, @ROLE, @USERNAME, @PASSWORD);
END;


USE [FUREVERFAMILY]
GO
/****** Object:  StoredProcedure [dbo].[LOGINUSER]    Script Date: 5/2/2025 4:00:35 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[LOGINUSER]
@USERNAME VARCHAR(100),
@PASSWORD VARCHAR(100),
@ROLE VARCHAR(15) OUTPUT
AS
BEGIN
DECLARE @StoredPassword VARCHAR(100);

SELECT @StoredPassword = [PASSWORD], @ROLE = ROLE
FROM [USER]
WHERE USERNAME = @USERNAME;

IF @StoredPassword IS NULL
BEGIN

RETURN -1;
END


RETURN 0;
END;


USE [FUREVERFAMILY]
GO
/****** Object:  StoredProcedure [dbo].[sp_AddPetWithShelter]    Script Date: 5/2/2025 4:37:02 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_AddPetWithShelter]
    @UserID INT,
    @PetType VARCHAR(20),
    @PetBreed VARCHAR(30),
    @PhotoURL VARCHAR(100),
    @PetWeight DECIMAL(5,2),
    @PetHeight DECIMAL(5,2),
    @Quantity INT,
    @ShelterAddress VARCHAR(150),
    @ShelterName VARCHAR(20),
    @ContactNumber VARCHAR(15),
    @Email VARCHAR(100)
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @ShelterID INT;

    -- Check if shelter already exists
    SELECT @ShelterID = SHELTER_ID
    FROM PET_SHELTER
    WHERE [ADDRESS] = @ShelterAddress
      AND SHELTER_NAME = @ShelterName
      AND CONTACT_NUMBER = @ContactNumber;

    -- If shelter doesn't exist, insert it
    IF @ShelterID IS NULL
    BEGIN
        INSERT INTO PET_SHELTER ([ADDRESS], SHELTER_NAME, CONTACT_NUMBER, EMAIL)
        VALUES (@ShelterAddress, @ShelterName, @ContactNumber, @Email);

        SET @ShelterID = SCOPE_IDENTITY(); -- Get new Shelter ID
    END

    -- Insert pet record
    INSERT INTO PET ([USER_ID], PET_TYPE, PET_BREED, PHOTO_URL, PET_WEIGHT, PET_HEIGHT, QUANTITY, SHELTER_ID)
    VALUES (@UserID, @PetType, @PetBreed, @PhotoURL, @PetWeight, @PetHeight, @Quantity, @ShelterID);
END;

USE [FUREVERFAMILY]
GO
/****** Object:  StoredProcedure [dbo].[sp_GetPetsWithShelter]    Script Date: 5/2/2025 4:37:25 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[sp_GetPetsWithShelter]
AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        P.PET_ID,
        P.USER_ID,
        P.PET_TYPE,
        P.PET_BREED,
        P.PHOTO_URL,
        P.PET_WEIGHT,
        P.PET_HEIGHT,
        P.QUANTITY,
        S.SHELTER_ID,
        S.SHELTER_NAME,
        S.[ADDRESS] AS SHELTER_ADDRESS,
        S.CONTACT_NUMBER,
        S.EMAIL
    FROM PET P
    INNER JOIN PET_SHELTER S ON P.SHELTER_ID = S.SHELTER_ID
    LEFT JOIN ADOPTION A ON A.PET_ID = P.PET_ID
    LEFT JOIN EVALUATION E ON A.ADOPTION_ID = E.ADOPTION_ID
    WHERE E.EVALUATION_STATUS IS NULL OR E.EVALUATION_STATUS = 'Pending' OR E.EVALUATION_STATUS = 'Rejected'
    ORDER BY P.PET_ID DESC;
END


CREATE PROCEDURE sp_ApplyForAdoptionWithDetails
    @PET_ID INT,
    @USER_ID INT,
    @NO_ADOPTION INT,
    @PICKUP_DATE DATE,
    @ADOPTION_INCOME MONEY,
    @ADOPTION_HISTORY TEXT,
    @BEHAVIORAL_ASSESS TEXT
AS
BEGIN
    SET NOCOUNT ON;

    -- Insert into ADOPTION table
    INSERT INTO ADOPTION (
        PET_ID,
        [USER_ID],
        NO_ADOPTION,
        PICKUP_DATE
    )
    VALUES (
        @PET_ID,
        @USER_ID,
        @NO_ADOPTION,
        @PICKUP_DATE
    );

    -- Get the ID of the newly inserted ADOPTION record
    DECLARE @NewAdoptionID INT = SCOPE_IDENTITY();

    -- Insert into EVALUATION table with provided evaluation details
    INSERT INTO EVALUATION (
        [USER_ID],
        ADOPTION_ID,
        EVALUATION_STATUS,
        ADOPTION_INCOME,
        ADOPTION_HISTORY,
        BEHAVIORAL_ASSESS,
        EVALUATION_DATE
    )
    VALUES (
        @USER_ID,
        @NewAdoptionID,
        'Pending',  -- You can modify the status as needed
        @ADOPTION_INCOME,
        @ADOPTION_HISTORY,
        @BEHAVIORAL_ASSESS,
        GETDATE()
    );
END;


CREATE PROCEDURE sp_GetAdoptionApplications
AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        eva.EVALUATION_ID,
        eva.EVALUATION_STATUS,
        eva.ADOPTION_INCOME,
        eva.ADOPTION_HISTORY,
        eva.BEHAVIORAL_ASSESS,
        eva.EVALUATION_DATE,

        a.ADOPTION_ID,
        a.NO_ADOPTION,
        a.PICKUP_DATE,
        a.ADOPTION_DATE,

        p.PET_ID,
        p.PET_BREED,
        p.PHOTO_URL,

        ps.SHELTER_NAME,
        ps.[ADDRESS]     AS SHELTER_ADDRESS,

        reg.FIRSTNAME,
        reg.LASTNAME,

        u.[USER_ID]

    FROM EVALUATION eva
    INNER JOIN ADOPTION a       ON eva.ADOPTION_ID = a.ADOPTION_ID
    INNER JOIN PET p            ON a.PET_ID        = p.PET_ID
    INNER JOIN PET_SHELTER ps   ON p.SHELTER_ID    = ps.SHELTER_ID
    INNER JOIN [USER] u         ON eva.[USER_ID]     = u.[USER_ID]
    INNER JOIN REGISTER reg     ON u.REGISTER_ID   = reg.REGISTER_ID

    ORDER BY eva.EVALUATION_DATE DESC;
END;


CREATE PROCEDURE sp_ApproveAdoptionApplication
    @EvaluationID INT
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE EVALUATION
    SET EVALUATION_STATUS = 'Approved'
    WHERE EVALUATION_ID = @EvaluationID;
END;

CREATE PROCEDURE sp_RejectAdoptionApplication
    @EvaluationID INT
AS
BEGIN
    SET NOCOUNT ON;

    UPDATE EVALUATION
    SET EVALUATION_STATUS = 'Rejected'
    WHERE EVALUATION_ID = @EvaluationID;
END;

CREATE PROCEDURE sp_InsertPetShelter
    @Address VARCHAR(150),
    @ShelterName VARCHAR(20),
    @ContactNumber VARCHAR(15),
    @Email VARCHAR(100)
AS
BEGIN
    SET NOCOUNT ON;

    INSERT INTO PET_SHELTER ([ADDRESS], SHELTER_NAME, CONTACT_NUMBER, EMAIL)
    VALUES (@Address, @ShelterName, @ContactNumber, @Email);
END;
